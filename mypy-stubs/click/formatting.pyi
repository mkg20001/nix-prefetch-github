from typing import Any, Optional

from ._compat import term_len as term_len
from .parser import split_opt as split_opt
from .termui import get_terminal_size as get_terminal_size

FORCED_WIDTH: Any

def measure_table(rows: Any): ...
def iter_rows(rows: Any, col_count: Any) -> None: ...
def wrap_text(
    text: Any,
    width: int = ...,
    initial_indent: str = ...,
    subsequent_indent: str = ...,
    preserve_paragraphs: bool = ...,
): ...

class HelpFormatter:
    indent_increment: Any = ...
    width: Any = ...
    current_indent: int = ...
    buffer: Any = ...
    def __init__(
        self,
        indent_increment: int = ...,
        width: Optional[Any] = ...,
        max_width: Optional[Any] = ...,
    ) -> None: ...
    def write(self, string: Any) -> None: ...
    def indent(self) -> None: ...
    def dedent(self) -> None: ...
    def write_usage(self, prog: Any, args: str = ..., prefix: str = ...) -> None: ...
    def write_heading(self, heading: Any) -> None: ...
    def write_paragraph(self) -> None: ...
    def write_text(self, text: Any) -> None: ...
    def write_dl(
        self, rows: Any, col_max: int = ..., col_spacing: int = ...
    ) -> None: ...
    def section(self, name: Any) -> None: ...
    def indentation(self) -> None: ...
    def getvalue(self): ...

def join_options(options: Any): ...
