from typing import Any

from .core import Argument as Argument
from .core import MultiCommand as MultiCommand
from .core import Option as Option
from .parser import split_arg_string as split_arg_string
from .types import Choice as Choice
from .utils import echo as echo

WORDBREAK: str
COMPLETION_SCRIPT_BASH: str
COMPLETION_SCRIPT_ZSH: str
COMPLETION_SCRIPT_FISH: str

def get_completion_script(prog_name: Any, complete_var: Any, shell: Any): ...
def resolve_ctx(cli: Any, prog_name: Any, args: Any): ...
def start_of_option(param_str: Any): ...
def is_incomplete_option(all_args: Any, cmd_param: Any): ...
def is_incomplete_argument(current_params: Any, cmd_param: Any): ...
def get_user_autocompletions(ctx: Any, args: Any, incomplete: Any, cmd_param: Any): ...
def get_visible_commands_starting_with(ctx: Any, starts_with: Any) -> None: ...
def add_subcommand_completions(
    ctx: Any, incomplete: Any, completions_out: Any
) -> None: ...
def get_choices(cli: Any, prog_name: Any, args: Any, incomplete: Any): ...
def do_complete(cli: Any, prog_name: Any, include_descriptions: Any): ...
def do_complete_fish(cli: Any, prog_name: Any): ...
def bashcomplete(cli: Any, prog_name: Any, complete_var: Any, complete_instr: Any): ...
